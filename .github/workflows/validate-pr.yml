name: Validate Project Submission PR

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'data/**'
      - 'public/assets/logos/**'

jobs:
  validate-submission:
    if: github.event.pull_request.user.login != 'lakmalmabm'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: |
            data/**/*.json
            public/assets/logos/**

      - name: Validate PR title format
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ ! "$PR_TITLE" =~ ^[Aa]dded[[:space:]]+[Pp]roject[[:space:]]+\[.+\]$ ]]; then
            echo "‚ùå PR title must follow format: 'Added Project [ProjectName]'"
            echo "Current title: $PR_TITLE"
            exit 1
          fi
          echo "‚úÖ PR title format is correct"

      - name: Validate file changes
        run: |
          echo "Changed files: ${{ steps.changed-files.outputs.all_changed_files }}"

          if [ -z "${{ steps.changed-files.outputs.all_changed_files }}" ]; then
            echo "‚ùå No matching files found in this PR"
            exit 1
          fi

          CHANGED_COUNT=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | wc -l)

          if [ "$CHANGED_COUNT" -gt 2 ]; then
            echo "‚ùå Only 2 files allowed per PR: 1 JSON file in /data and 1 logo file in /public/assets/logos"
            echo "Found $CHANGED_COUNT changed files"
            exit 1
          fi

          JSON_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -E "^data/.*\.json$" | wc -l || true)
          LOGO_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -E "^public/assets/logos/.*\.(png|jpg|jpeg|svg)$" | wc -l || true)

          if [ "$JSON_FILES" -ne 1 ] || [ "$LOGO_FILES" -ne 1 ]; then
            echo "‚ùå Must have exactly 1 JSON file in /data and 1 logo file in /public/assets/logos"
            echo "Found: $JSON_FILES JSON files, $LOGO_FILES logo files"
            exit 1
          fi

          echo "‚úÖ File changes are valid"

      - name: Install validation dependencies
        run: |
          cd .github/scripts
          npm init -y
          npm install ajv ajv-formats
          cd ../..

      - name: Validate JSON schema
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == data/*.json ]]; then
              echo "Validating JSON file: $file"
              node .github/scripts/validate-project.js "$file"
              echo "‚úÖ JSON validation passed for $file"
            fi
          done

      - name: Add timestamp to JSON files
        if: ${{ !contains(github.event.head_commit.message, 'ü§ñ Add timestamp') }}
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == data/*.json ]]; then
              echo "Adding timestamp to: $file"
              node .github/scripts/add-timestamp.js "$file"
            fi
          done

      - name: Verify logo file exists and matches JSON
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == data/*.json ]]; then
              LOGO_PATH=$(jq -r '.logo' "$file")
              FULL_LOGO_PATH="public/$LOGO_PATH"

              if ! echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -q "^$FULL_LOGO_PATH$"; then
                echo "‚ùå Logo file $FULL_LOGO_PATH referenced in $file is not included in this PR"
                exit 1
              fi
              echo "‚úÖ Logo file validation passed"
            fi
          done

      - name: Build project to ensure no breaking changes
        run: |
          npm run build
          echo "‚úÖ Build successful"

      - name: Commit timestamp changes
        if: ${{ success() && !contains(github.event.head_commit.message, 'ü§ñ Add timestamp') }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          if git diff --quiet; then
            echo "No timestamp changes to commit"
          else
            git add data/*.json
            git commit -m "ü§ñ Add timestamp to project submission" -m "Automatically added timestamp field to project JSON file(s)." -m "Co-Authored-By: GitHub Actions <action@github.com>"
            git push origin HEAD:${{ github.head_ref }}
            echo "‚úÖ Timestamp committed and pushed"
          fi

      - name: Add success comment
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üéâ **Project Submission Validation Passed!**\n\n‚úÖ PR title format is correct\n‚úÖ File changes are valid (1 JSON + 1 logo file)\n‚úÖ JSON schema validation passed\n‚úÖ Logo file exists and matches JSON reference\n‚úÖ Build test passed\n‚úÖ Timestamp automatically added\n\nYour project submission is ready for review! üöÄ'
            })

      - name: Add failure comment
        if: failure() && !cancelled()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå **Project Submission Validation Failed**\n\nPlease check the workflow logs above and fix the issues. Common problems:\n\n- PR title must be: `Added Project [YourProjectName]`\n- Only 2 files allowed: 1 JSON in `/data` + 1 logo in `/public/assets/logos`\n- JSON must have required fields: name, description, logo, category\n- Logo path in JSON must match the actual logo file path\n\nPlease fix these issues and push updates to this PR.'
            })
